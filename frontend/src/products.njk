---
title: Product Management - Nerdblock
---

{% extends "layouts/default.njk" %}

{% block content %}
<div class="min-h-screen bg-gradient-to-b from-gray-900 to-gray-800 text-white px-6 py-12">
  <header class="text-center mb-16">
    <h1 class="text-4xl md:text-6xl font-extrabold mb-4">Product Management</h1>
    <p class="text-lg md:text-2xl max-w-2xl mx-auto mb-6">
      Manage your product catalog
    </p>
  </header>

  <div class="max-w-6xl mx-auto">
    <!-- Products List -->
    <section class="mb-16">
      <h2 class="text-3xl font-bold mb-8 text-center">Current Products</h2>
      <div class="bg-gray-700 rounded-2xl shadow-lg overflow-hidden">
        <div class="overflow-x-auto">
          <table class="w-full text-left">
            <thead class="bg-gray-800">
              <tr>
                <th class="px-6 py-4">Name</th>
                <th class="px-6 py-4">Genre</th>
                <th class="px-6 py-4">Description</th>
                <th class="px-6 py-4">Price</th>
                <th class="px-6 py-4">Actions</th>
              </tr>
            </thead>
            <tbody id="productsList">
              <!-- Products will be populated by JavaScript -->
              <tr>
                <td colspan="5" class="px-6 py-4 text-center">
                  <div class="animate-pulse">
                    <div class="h-4 bg-gray-600 rounded w-3/4 mx-auto"></div>
                  </div>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </section>

    <!-- Add New Product -->
    <section class="mb-16">
      <h2 class="text-3xl font-bold mb-8 text-center">Add New Product</h2>
      <div class="bg-gray-700 rounded-2xl shadow-lg p-8">
        <form id="addProductForm" class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label class="block text-sm font-medium mb-2" for="name">Product Name</label>
              <input type="text" id="name" name="name" required
                class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:border-purple-500">
            </div>

            <div>
              <label class="block text-sm font-medium mb-2" for="genreId">Genre</label>
              <select id="genreId" name="genreId" required
                class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:border-purple-500">
                <option value="">Select a genre</option>
                <!-- Will be populated by JavaScript -->
              </select>
            </div>

            <div>
              <label class="block text-sm font-medium mb-2" for="price">Price</label>
              <input type="number" id="price" name="price" required min="0" step="0.01"
                class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:border-purple-500">
            </div>

            <div class="md:col-span-2">
              <label class="block text-sm font-medium mb-2" for="description">Description</label>
              <textarea id="description" name="description" required
                class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:border-purple-500"
                rows="3"></textarea>
            </div>
          </div>

          <div class="flex justify-end">
            <button type="submit"
              class="px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-gray-800">
              Add Product
            </button>
          </div>
        </form>
      </div>
    </section>
  </div>
</div>

<script type="module">
import { queryApi } from '/api/queries.js';

async function loadProducts() {
    try {
        const products = await queryApi.getAllProducts();
        const productsList = document.getElementById('productsList');
        
        productsList.innerHTML = products.map(product => `
            <tr class="border-t border-gray-600 hover:bg-gray-600">
                <td class="px-6 py-4">${product.Name}</td>
                <td class="px-6 py-4">${product.GenreName || 'Uncategorized'}</td>
                <td class="px-6 py-4">${product.Description || 'No description'}</td>
                <td class="px-6 py-4">$${product.Price ? product.Price.toFixed(2) : '0.00'}</td>
                <td class="px-6 py-4">
                    <button 
                        onclick="deleteProduct(${product.ProductID})"
                        class="text-red-400 hover:text-red-300 focus:outline-none"
                        title="Delete product">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                        </svg>
                    </button>
                </td>
            </tr>
        `).join('');
    } catch (error) {
        console.error('Error loading products:', error);
        alert('Failed to load products. Please try again later.');
    }
}

async function loadGenres() {
    try {
        const genres = await queryApi.getAllGenres();
        const genreSelect = document.getElementById('genreId');
        
        genreSelect.innerHTML = `
            <option value="">Select a genre</option>
            ${genres.map(genre => `
                <option value="${genre.GenreID}">${genre.GenreName}</option>
            `).join('')}
        `;
    } catch (error) {
        console.error('Error loading genres:', error);
        alert('Failed to load genres. Please try again later.');
    }
}

// Handle form submission
document.getElementById('addProductForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    try {
        const formData = {
            name: document.getElementById('name').value.trim(),
            genreId: parseInt(document.getElementById('genreId').value),
            price: parseFloat(document.getElementById('price').value),
            description: document.getElementById('description').value.trim()
        };

        await queryApi.addProduct(formData);
        alert('Product added successfully!');
        
        // Refresh the products display
        await loadProducts();
        
        // Reset form
        e.target.reset();
    } catch (error) {
        console.error('Error adding product:', error);
        alert('Failed to add product. Please try again.');
    }
});

// Add the delete function
async function deleteProduct(productId) {
    if (!confirm('Are you sure you want to delete this product? This will also remove it from inventory.')) {
        return;
    }

    try {
        await queryApi.deleteProduct(productId);
        await loadProducts();
    } catch (error) {
        console.error('Error deleting product:', error);
        alert('Failed to delete product. Please try again.');
    }
}

// Make the delete function available to the onclick handler
window.deleteProduct = deleteProduct;

// Check if user is admin before loading page
async function checkAdminAccess() {
    try {
        const employee = await queryApi.getCurrentEmployee();
        if (!employee || !employee.isAdmin) {
            window.location.href = '/';
            alert('Access denied. Admin privileges required.');
        }
    } catch (error) {
        console.error('Error checking admin access:', error);
        window.location.href = '/';
    }
}

// Load everything when the page loads
document.addEventListener('DOMContentLoaded', () => {
    checkAdminAccess().then(() => {
        loadProducts();
        loadGenres();
    });
});
</script>
{% endblock %} 