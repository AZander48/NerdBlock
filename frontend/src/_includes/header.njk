<header class="bg-gray-900 text-white">
    <nav class="container mx-auto px-4 py-4">
        <div class="flex justify-between items-center">
            <!-- Logo -->
            <div class="flex items-center">
                <a href="/" class="text-2xl font-bold">NerdBlock</a>
            </div>

            <div class="flex items-center space-x-6">
                <!-- Employee Login/Status -->
                <div class="flex items-center space-x-4">
                    <a href="/employee-login" id="employeeLoginLink" class="text-white hover:text-gray-300 py-2 md:py-0">
                        Employee Login
                    </a>
                    <div id="employeeStatus" class="hidden">
                        <span id="employeeName" class="text-sm text-gray-300 mr-2"></span>
                        <button id="employeeLogout" class="text-sm text-red-400 hover:text-red-300">Logout</button>
                    </div>
                </div>

                <!-- Auth Links -->
                <div id="authLinks" class="hidden md:flex items-center space-x-4">
                    <a href="/subscriberLogin" id="loginLink" class="text-white hover:text-gray-300 py-2 md:py-0">
                        Subscriber Login
                    </a>
                    <a href="/subscriber/profile" id="profileLink" class="hidden text-white hover:text-gray-300 py-2 md:py-0">
                        <div class="flex items-center space-x-2">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                            </svg>
                            <span>Profile</span>
                        </div>
                    </a>
                </div>

                <!-- Mobile menu button -->
                <div class="md:hidden">
                    <button id="mobile-menu-button" class="text-white hover:text-gray-300 focus:outline-none">
                        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Navigation Links -->
        <div id="mobile-menu" class="hidden md:block mt-4 md:mt-0">
            <div class="flex flex-col md:flex-row md:items-center md:space-x-8">
                <!-- Customer View Links -->
                <a href="/" class="text-white hover:text-gray-300 py-2 md:py-0">Home</a>
                <a href="/subscription" class="text-white hover:text-gray-300 py-2 md:py-0 subscriber-only">Subscription</a>
                <a href="/catalog" class="text-white hover:text-gray-300 py-2 md:py-0">Catalog</a>

                <!-- Employee View Links -->
                <a href="/inventory" class="text-white hover:text-gray-300 py-2 md:py-0 hidden employee-link">Inventory</a>
                <a href="/reports" class="text-white hover:text-gray-300 py-2 md:py-0 hidden employee-link">Reports</a>
            </div>
        </div>
    </nav>
</header>

<!-- Employee Auth Script -->
<script type="module">
    import { queryApi } from '/api/queries.js';

    document.addEventListener('DOMContentLoaded', async function() {
        const employeeLinks = document.querySelectorAll('.employee-link');
        const subscriberOnlyLinks = document.querySelectorAll('.subscriber-only');
        const adminOnlyLinks = document.querySelectorAll('.admin-only');
        const mobileMenu = document.getElementById('mobile-menu');
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const employeeLoginLink = document.getElementById('employeeLoginLink');
        const employeeStatus = document.getElementById('employeeStatus');
        const employeeName = document.getElementById('employeeName');
        const employeeLogout = document.getElementById('employeeLogout');
        const loginLink = document.getElementById('loginLink');
        const profileLink = document.getElementById('profileLink');
        const authLinks = document.getElementById('authLinks');

        let isSubscriberLoggedIn = false;
        let isEmployeeLoggedIn = false;

        // Check subscriber authentication status
        try {
            const subscriber = await queryApi.getCurrentSubscriber();
            if (subscriber) {
                isSubscriberLoggedIn = true;
                loginLink.classList.add('hidden');
                profileLink.classList.remove('hidden');
                // Hide employee login when subscriber is logged in
                employeeLoginLink.classList.add('hidden');
            }
        } catch (error) {
            console.error('Error checking subscriber auth status:', error);
            loginLink.classList.remove('hidden');
            profileLink.classList.add('hidden');
        }
        
        // Show auth links after checking status
        authLinks.classList.remove('hidden');

        // Check employee authentication status
        try {
            const employee = await queryApi.getCurrentEmployee();
            if (employee) {
                isEmployeeLoggedIn = true;
                employeeLoginLink.classList.add('hidden');
                employeeStatus.classList.remove('hidden');
                employeeName.textContent = `${employee.FirstName} ${employee.LastName}`;
                
                // Show employee links
                employeeLinks.forEach(link => link.classList.remove('hidden'));
                
                // Show admin-only links if employee is admin
                if (employee.IsAdmin) {
                    adminOnlyLinks.forEach(link => link.classList.remove('hidden'));
                }

                // Hide subscriber-specific elements
                loginLink.classList.add('hidden');
                subscriberOnlyLinks.forEach(link => link.classList.add('hidden'));
            } else if (!isSubscriberLoggedIn) {
                // Only show employee login if subscriber is not logged in
                employeeLoginLink.classList.remove('hidden');
                employeeStatus.classList.add('hidden');
                employeeLinks.forEach(link => link.classList.add('hidden'));
                adminOnlyLinks.forEach(link => link.classList.add('hidden'));
                // Show subscriber links when not logged in as employee
                subscriberOnlyLinks.forEach(link => link.classList.remove('hidden'));
            }
        } catch (error) {
            console.error('Error checking employee auth status:', error);
            if (!isSubscriberLoggedIn) {
                employeeLoginLink.classList.remove('hidden');
            }
            employeeStatus.classList.add('hidden');
            employeeLinks.forEach(link => link.classList.add('hidden'));
            adminOnlyLinks.forEach(link => link.classList.add('hidden'));
            // Show subscriber links on error
            subscriberOnlyLinks.forEach(link => link.classList.remove('hidden'));
        }

        // Handle employee logout
        employeeLogout.addEventListener('click', async () => {
            try {
                await queryApi.logoutEmployee();
                window.location.reload();
            } catch (error) {
                console.error('Logout failed:', error);
                alert('Failed to logout. Please try again.');
            }
        });

        // Mobile menu toggle
        mobileMenuButton.addEventListener('click', function() {
            mobileMenu.classList.toggle('hidden');
        });
    });
</script>