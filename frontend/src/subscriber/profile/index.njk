---
title: Subscriber Profile - Nerdblock
---

{% extends "layouts/default.njk" %}

{% block content %}
<div class="min-h-screen bg-gradient-to-b from-gray-900 to-gray-800 text-white px-6 py-12">
    <div class="max-w-4xl mx-auto">
        <header class="text-center mb-12">
            <h1 class="text-4xl md:text-5xl font-extrabold mb-4">Your Profile</h1>
            <p class="text-lg text-gray-300">Manage your account details and preferences</p>
        </header>

        <div class="grid grid-cols-1 gap-8">
            <!-- Personal Information -->
            <section id="personalInfo" class="bg-gray-700 rounded-2xl shadow-lg p-8">
                <h2 class="text-2xl font-bold mb-6">Personal Information</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-gray-300 mb-2">First Name</label>
                        <p id="firstName" class="text-lg font-medium">Loading...</p>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-2">Last Name</label>
                        <p id="lastName" class="text-lg font-medium">Loading...</p>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-2">Email</label>
                        <p id="email" class="text-lg font-medium">Loading...</p>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-2">Phone</label>
                        <p id="phone" class="text-lg font-medium">Loading...</p>
                    </div>
                </div>
            </section>

            <!-- Shipping Information -->
            <section id="shippingInfo" class="bg-gray-700 rounded-2xl shadow-lg p-8">
                <h2 class="text-2xl font-bold mb-6">Shipping Information</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-gray-300 mb-2">Shipping Address</label>
                        <p id="shippingAddress" class="text-lg font-medium">Loading...</p>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-2">Billing Address</label>
                        <p id="billingAddress" class="text-lg font-medium">Loading...</p>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-2">Country</label>
                        <p id="country" class="text-lg font-medium">Loading...</p>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-2">Payment Method</label>
                        <p id="paymentType" class="text-lg font-medium">Loading...</p>
                    </div>
                </div>
            </section>

            <!-- Account Information -->
            <section id="accountInfo" class="bg-gray-700 rounded-2xl shadow-lg p-8">
                <h2 class="text-2xl font-bold mb-6">Account Information</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-gray-300 mb-2">Username</label>
                        <p id="username" class="text-lg font-medium">Loading...</p>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-2">Member Since</label>
                        <p id="dateCreated" class="text-lg font-medium">Loading...</p>
                    </div>
                </div>
            </section>

            <!-- Action Buttons -->
            <div class="flex flex-col md:flex-row gap-4 justify-center mt-8">
                <button id="editProfile" class="bg-purple-600 hover:bg-purple-700 px-8 py-3 rounded-lg transition-colors">
                    Edit Profile
                </button>
                <button id="changePassword" class="bg-gray-600 hover:bg-gray-700 px-8 py-3 rounded-lg transition-colors">
                    Change Password
                </button>
                <button id="logoutButton" class="bg-red-600 hover:bg-red-700 px-8 py-3 rounded-lg transition-colors">
                    Logout
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Add this modal HTML before the closing </div> of your main content -->
<div id="changePasswordModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
    <div class="bg-gray-700 p-8 rounded-2xl shadow-xl w-full max-w-md">
        <h3 class="text-2xl font-bold mb-6">Change Password</h3>
        
        <form id="changePasswordForm" class="space-y-6">
            <div>
                <label for="currentPassword" class="block text-sm font-medium mb-1">Current Password</label>
                <input type="password" id="currentPassword" name="currentPassword" required
                       class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-purple-500" />
            </div>

            <div>
                <label for="newPassword" class="block text-sm font-medium mb-1">New Password</label>
                <input type="password" id="newPassword" name="newPassword" required
                       class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-purple-500" />
            </div>

            <div>
                <label for="confirmPassword" class="block text-sm font-medium mb-1">Confirm New Password</label>
                <input type="password" id="confirmPassword" name="confirmPassword" required
                       class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-purple-500" />
            </div>

            <div class="flex justify-end space-x-4 mt-6">
                <button type="button" id="cancelPasswordChange"
                        class="px-4 py-2 bg-gray-600 hover:bg-gray-500 rounded-lg transition-colors">
                    Cancel
                </button>
                <button type="submit"
                        class="px-4 py-2 bg-purple-600 hover:bg-purple-700 rounded-lg transition-colors">
                    Change Password
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Add this modal HTML before the closing </div> of your main content -->
<div id="editProfileModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
    <div class="bg-gray-700 p-8 rounded-2xl shadow-xl w-full max-w-md">
        <h3 class="text-2xl font-bold mb-6">Edit Profile</h3>
        
        <form id="editProfileForm" class="space-y-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label for="editFirstName" class="block text-sm font-medium mb-1">First Name</label>
                    <input type="text" id="editFirstName" name="firstName" required
                           class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-purple-500" />
                </div>
                <div>
                    <label for="editLastName" class="block text-sm font-medium mb-1">Last Name</label>
                    <input type="text" id="editLastName" name="lastName" required
                           class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-purple-500" />
                </div>
            </div>

            <div>
                <label for="editEmail" class="block text-sm font-medium mb-1">Email</label>
                <input type="email" id="editEmail" name="email" required
                       class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-purple-500" />
            </div>

            <div>
                <label for="editPhone" class="block text-sm font-medium mb-1">Phone</label>
                <input type="tel" id="editPhone" name="phone"
                       class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-purple-500" />
            </div>

            <div>
                <label for="editAddress" class="block text-sm font-medium mb-1">Address</label>
                <input type="text" id="editAddress" name="address"
                       class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-purple-500" />
            </div>

            <div>
                <label for="editCity" class="block text-sm font-medium mb-1">City</label>
                <input type="text" id="editCity" name="city"
                       class="w-full px-4 py-2 rounded-lg bg-gray-800 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-purple-500" />
            </div>

            <div class="flex justify-end space-x-4 mt-6">
                <button type="button" id="cancelEditProfile"
                        class="px-4 py-2 bg-gray-600 hover:bg-gray-500 rounded-lg transition-colors">
                    Cancel
                </button>
                <button type="submit"
                        class="px-4 py-2 bg-purple-600 hover:bg-purple-700 rounded-lg transition-colors">
                    Save Changes
                </button>
            </div>
        </form>
    </div>
</div>

<script type="module">
import { queryApi } from '/api/queries.js';

let currentSubscriber = null;

async function handleLogout() {
    try {
        await queryApi.logoutSubscriber();
        // Redirect to home page after successful logout
        window.location.href = '/';
    } catch (error) {
        console.error('Logout failed:', error);
        alert('Failed to logout. Please try again.');
    }
}

function showChangePasswordModal() {
    const modal = document.getElementById('changePasswordModal');
    modal.classList.remove('hidden');
}

function hideChangePasswordModal() {
    const modal = document.getElementById('changePasswordModal');
    modal.classList.add('hidden');
    // Clear form
    document.getElementById('changePasswordForm').reset();
}

async function handleChangePassword(event) {
    event.preventDefault();
    
    const currentPassword = document.getElementById('currentPassword').value;
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;

    // Validate passwords
    if (newPassword !== confirmPassword) {
        alert('New passwords do not match!');
        return;
    }

    if (newPassword.length < 8) {
        alert('New password must be at least 8 characters long!');
        return;
    }

    try {
        await queryApi.changePassword({
            currentPassword,
            newPassword
        });
        
        alert('Password changed successfully!');
        hideChangePasswordModal();
    } catch (error) {
        console.error('Failed to change password:', error);
        alert(error.message || 'Failed to change password. Please try again.');
    }
}

function showEditProfileModal() {
    const modal = document.getElementById('editProfileModal');
    modal.classList.remove('hidden');
    
    // Pre-fill form with current values
    if (currentSubscriber) {
        document.getElementById('editFirstName').value = currentSubscriber.FirstName || '';
        document.getElementById('editLastName').value = currentSubscriber.LastName || '';
        document.getElementById('editEmail').value = currentSubscriber.EmailAddress || '';
        document.getElementById('editPhone').value = currentSubscriber.PhoneNumber || '';
        document.getElementById('editAddress').value = currentSubscriber.Address || '';
        document.getElementById('editCity').value = currentSubscriber.City || '';
    }
}

function hideEditProfileModal() {
    const modal = document.getElementById('editProfileModal');
    modal.classList.add('hidden');
    document.getElementById('editProfileForm').reset();
}

async function handleEditProfile(event) {
    event.preventDefault();
    
    const formData = {
        firstName: document.getElementById('editFirstName').value,
        lastName: document.getElementById('editLastName').value,
        email: document.getElementById('editEmail').value,
        phone: document.getElementById('editPhone').value,
        address: document.getElementById('editAddress').value,
        city: document.getElementById('editCity').value
    };

    try {
        await queryApi.updateProfile(formData);
        
        // Update the displayed information
        currentSubscriber = await queryApi.getCurrentSubscriber();
        updateProfileDisplay(currentSubscriber);
        
        alert('Profile updated successfully!');
        hideEditProfileModal();
    } catch (error) {
        console.error('Failed to update profile:', error);
        alert(error.message || 'Failed to update profile. Please try again.');
    }
}

function updateProfileDisplay(subscriber) {
    document.getElementById('firstName').textContent = subscriber.FirstName || 'Not provided';
    document.getElementById('lastName').textContent = subscriber.LastName || 'Not provided';
    document.getElementById('email').textContent = subscriber.EmailAddress || 'Not provided';
    document.getElementById('phone').textContent = subscriber.PhoneNumber || 'Not provided';
    document.getElementById('shippingAddress').textContent = subscriber.Address || 'Not provided';
    document.getElementById('billingAddress').textContent = subscriber.City || 'Not provided';
}

document.addEventListener('DOMContentLoaded', async () => {
    try {
        currentSubscriber = await queryApi.getCurrentSubscriber();
        console.log('Subscriber data:', currentSubscriber);

        if (!currentSubscriber) {
            window.location.href = '/subscriberLogin?redirect=/subscriber/profile';
            return;
        }

        // Format date to YYYY-MM-DD
        const formatDate = (dateString) => {
            if (!dateString) return 'Not provided';
            const date = new Date(dateString);
            return date.toISOString().split('T')[0]; // This will give you YYYY-MM-DD
        };

        // Update personal information
        document.getElementById('firstName').textContent = currentSubscriber.FirstName || 'Not provided';
        document.getElementById('lastName').textContent = currentSubscriber.LastName || 'Not provided';
        document.getElementById('email').textContent = currentSubscriber.EmailAddress || 'Not provided';
        document.getElementById('phone').textContent = currentSubscriber.PhoneNumber || 'Not provided';

        // Update shipping information
        document.getElementById('shippingAddress').textContent = currentSubscriber.Address || 'Not provided';
        document.getElementById('billingAddress').textContent = currentSubscriber.City || 'Not provided';
        document.getElementById('country').textContent = currentSubscriber.CountryName || 'Not provided';
        document.getElementById('paymentType').textContent = currentSubscriber.PaymentType || 'Not provided';

        // Update account information
        document.getElementById('username').textContent = currentSubscriber.UserName || 'Not provided';
        document.getElementById('dateCreated').textContent = formatDate(currentSubscriber.DateCreated);

        // Add event listeners for buttons
        document.getElementById('editProfile').addEventListener('click', showEditProfileModal);

        document.getElementById('changePassword').addEventListener('click', showChangePasswordModal);

        document.getElementById('logoutButton').addEventListener('click', async () => {
            if (confirm('Are you sure you want to logout?')) {
                await handleLogout();
            }
        });

        // Change Password button
        document.getElementById('changePassword').addEventListener('click', showChangePasswordModal);

        // Cancel button in modal
        document.getElementById('cancelPasswordChange').addEventListener('click', hideChangePasswordModal);

        // Form submission
        document.getElementById('changePasswordForm').addEventListener('submit', handleChangePassword);

        // Close modal if clicking outside
        document.getElementById('changePasswordModal').addEventListener('click', (e) => {
            if (e.target === e.currentTarget) {
                hideChangePasswordModal();
            }
        });

        // Edit Profile button
        document.getElementById('editProfile').addEventListener('click', showEditProfileModal);

        // Cancel button in modal
        document.getElementById('cancelEditProfile').addEventListener('click', hideEditProfileModal);

        // Form submission
        document.getElementById('editProfileForm').addEventListener('submit', handleEditProfile);

        // Close modal if clicking outside
        document.getElementById('editProfileModal').addEventListener('click', (e) => {
            if (e.target === e.currentTarget) {
                hideEditProfileModal();
            }
        });

    } catch (error) {
        console.error('Error loading profile:', error);
        alert('Failed to load profile data. Please try again later.');
    }
});
</script>
{% endblock %} 